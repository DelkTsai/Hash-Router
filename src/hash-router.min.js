/*!
 * hash-router v1.1
 * https://github.com/michaelsogos/Hash-Router
 * 
 * Developed by Michael Sogos
 * Copyright 2014 
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 * Date: 2014-10-19
 *
 * Copyright (C) 2014 by Michael Sogos <![[michael.sogos[at]gurustudioweb[dot]it]]>
 * Thanks to these libraries to inspired me:
 * - path.js https://github.com/mtrpcic/pathjs
 * - sammy.js http://sammyjs.org/
 * - director.js https://github.com/flatiron/director
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 **/
var Router={init:function(n,t){return(Router.__eventOnChange=n,Router.__eventOnNotFound=t,!("onhashchange"in window))?(console.error("The browser doesn't support HASH on URL!"),!1):(Router.__bindHashChange(),window.location.hash==""||window.location.hash=="#"?(Router.__listener("#/"),!0):(Router.__listener(window.location.hash),!0))},__bindHashChange:function(){window.onhashchange=function(){Router.__listener(location.hash)}},__cleanHash:function(n){var t={},i=n.indexOf("?"),r;return t.hash=n,t.hashParams=i>=0?n.substring(0,i):n,t.hashQuery=i>=0?n.substring(n.indexOf("?")+1):"",t.hashQueryArray=t.hashQuery?t.hashQuery.split("&"):[],r=t.hashParams.replace(/\/+$/,""),t.hashParams!==r&&(window.onhashchange=null,t.hash=r,t.hash+=t.hashQuery?"?"+t.hashQuery:"",window.location.hash=t.hash,Router.__bindHashChange()),t},__listener:function(n){var t=Router.matchRoute(n);if(t||Router.__eventOnNotFound){if(!t&&Router.__eventOnNotFound)return Router.__eventOnNotFound(Router.__hashToArray(n)),!1}else return console.error("Cannot find a valid route for hash "+n+"!"),!1;return Router.run(t)},navigate:function(n){window.location.hash=n},__hashToArray:function(n){var t=n.split("/");return t.length>0&&t[0]=="#"&&t.shift(),t},__run:function(n,t,i){var u,r;n[t]?(u=new Router.task(function(i){var r=Router.__nextState(t);r&&Router.__run(n,r,i)}),n.event={},n.event.previousResult=i,n.event.state=t,n.task=u,n[t]()):(r=Router.__nextState(t),r&&Router.__run(n,r))},__nextState:function(n){return n=="before"?"on":n=="on"?"after":null},__eventOnChange:null,__eventOnNotFound:null,run:function(n){Router.__eventOnChange(n);Router.__run(n,"before")},add:function(n,t){var r=!1;if(!n.path)return console.error("Cannot find property path when adding a new route!"),!1;for(i=0;i<Router.routes.length;i++)if(Router.routes[i].path===n.path){if(r=!0,t===!0){Router.routes[i]=n;return}break}if(r)return console.error("A ruote for the path "+ruote.path+" is already mapped!"),!1;Router.routes.push(n)},findRoute:function(n){for(i=0;i<Router.routes.length;i++)if(Router.routes[i].path===n)return Router.routes[i]},matchRoute:function(n){var r=Router.__cleanHash(n),o=r.hashParams.split("/"),e=r.hashParams,s={},h={},u,t,f;if(r.hashQueryArray.length>0)for(q=0;q<r.hashQueryArray.length;q++)u=r.hashQueryArray[q].split("="),u.length>=1&&u[0]&&(h[u[0]]=u[1]?decodeURIComponent(u[1]):"");for(i=0;i<Router.routes.length;i++){if(t=Router.routes[i],t.path.search(/:/)>0)for(f=t.path.split("/"),e=r.hashParams,x=0;x<f.length;x++)x<o.length&&f[x].charAt(0)===":"&&(s[f[x].replace(/:/,"")]=o[x],e=e.replace(o[x],f[x]));if(t.path===e)return t.params=s,t.url=n,t.query=h,t}return null},routes:[]};Router.task=function(n){return{__callback:n,done:function(n){this.__callback(n)}}};
/*
//# sourceMappingURL=hash-router.min.js.map
*/